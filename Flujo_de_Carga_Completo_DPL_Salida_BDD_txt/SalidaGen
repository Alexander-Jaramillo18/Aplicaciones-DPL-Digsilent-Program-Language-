    
    object O;
    string case;
    set xSet;      
    object xObject;
    
    string str_loc_name;
    string str_cpGrid;
    string str_loc_name2;
    int    int_iv_mode;
    double dou_P_max;
    double dou_usetp;
    double dou_Psum;
    double dou_Qsum;
    
    string tipo;
    int out;
    int tipoMAQ;
       
    ! Extraer nombre de caso
    O=ActiveCase();
    case=O:loc_name;
    
    ! Ordenar 
    xSet=AllRelevant('*.ElmSym'); 
    xSet.SortToVar(0, 'loc_name');
    
    ! Escribir en archivo .csv
    for(xObject = xSet.First();xObject;xObject = xSet.Next())
    {
       out     = xObject:outserv;  
       tipoMAQ = xObject:b:i_mot;
       
       if ({tipoMAQ=0}.and.{out=0}) ! tipo==>0=Gen/1=Motor !! out==>0=ES/1=FS.    ! out==>0=ES/1=FS. 
       {
       tipo = 'GEN';
       str_loc_name   = xObject:e:loc_name;
       str_cpGrid     = xObject:r:cpGrid:b:loc_name;
       str_loc_name2  = xObject:t:loc_name; 
       int_iv_mode = xObject:e:iv_mode;
       dou_P_max = xObject:e:P_max;
       dou_usetp = xObject:e:usetp;
       dou_Psum = xObject:m:Psum:bus1;
       dou_Qsum = xObject:m:Qsum:bus1;
    
       fprintf(2,'%s-%s-%s,%s,%s,%s,%s,%s,%d,%f,%f,%f,%f\n',str_loc_name, str_loc_name2, case, str_loc_name, tipo, case,	str_cpGrid,	str_loc_name2,	int_iv_mode,	dou_P_max,	dou_usetp,	dou_Psum,	dou_Qsum);
       }
    }
    
